@startuml

' ---------------------------
' Alapos osztályok definiálása
' ---------------------------

class ApplicationUser {
	- Id : string
	- UserName : string
	- NormalizedUserName : string
	- Email : string
	- NormalizedEmail : string
	- EmailConfirmed : bool
	- PasswordHash : string
	- SecurityStamp : string
	- ConcurrencyStamp : string
	- PhoneNumber : string
	- PhoneNumberConfirmed : bool
	- TwoFactorEnabled : bool
	- LockoutEnd : DateTime?
	- LockoutEnabled : bool
	- AccesFailedCount : int
	+ PlayerName : string
	+ PlayerLevel :	int
	+ TotalScore : int
	+ CreatedAt : DataTime
}

class AspNetRole {
  - Id : string
  - Name : string
  - NormalizedName : string
  - ConcurrencyStamp : string
}

class AspNetUserRole {
  - UserId : string
  - RoleId : string
}

class AspNetUserClaim {
  - Id : int
  - UserId : string
  - ClaimType : string
  - ClaimValue : string
}

class AspNetUserLogin {
  - LoginProvider : string
  - ProviderKey : string
  - ProviderDisplayName : string
  - UserId : string
}

class AspNetUserToken {
  - UserId : string
  - LoginProvider : string
  - Name : string
  - Value : string
}

class LoginModel {
  - Email : string
  - Password : string
}

class RegisterModel {
    - UserName : string
    - Email : string
    - Password : string
	- PlayerName : string
	- CharacterIndex : int
}

' ---------------------------
' Egyéb osztályok
' ---------------------------

class Character {
  - CharacterId : int
  - AstroSign : string
  - Gender : string
  - CharacterIndex : int
}

class Inventory {
  - InventoryId : int
  - TotalScore : int
}

class InventoryMaterial {
  - InventoryId : int
  - MaterialId : int
  - Quantity : int
}

class Island {
  - IslandId : int
  - IslandName : string
  - Element : string
}

class Material {
  - MaterialId : int
  - WitchName : string
  - EnglishName : string
  - LatinName : string
}

class Player {
  - PlayerId : int
  - PlayerName : string
  - UserId : string
  - CharacterId : int
  - IslandId : int
  - InventoryId : int
  - RecipeBookId : int
  - LastLogin : DateTime?
  - CreatedAt : DateTime
}

class RecipeBook {
  - RecipeBookId : int
  - RecipeName : string
  - Acquired : string
}

' ---------------------------
' Kapcsolatok beállítása
' ---------------------------

ApplicationUser "1" --> "0..*" Player : has
Player "1" --> "1" Character : uses
Player "1" --> "0..1" Island : located on
Player "1" --> "1" Inventory : owns
Player "1" --> "0..1" RecipeBook : possesses
Island "1" --> "0..*" Player : contains
Inventory "1" --> "0..*" InventoryMaterial : contains
Material "1" --> "0..*" InventoryMaterial : referenced in

' ASP.NET Identity kapcsolatok
ApplicationUser "1" --> "0..*" AspNetUserRole : assigned
AspNetRole "1" --> "0..*" AspNetUserRole : contains
ApplicationUser "1" --> "0..*" AspNetUserClaim : has
ApplicationUser "1" --> "0..*" AspNetUserLogin : authenticated by
ApplicationUser "1" --> "0..*" AspNetUserToken : holds token

' ---------------------------
' ApplicationDbContext osztály (DbSet-ekkel)
' ---------------------------

class ApplicationDbContext {
  + Users : DbSet<ApplicationUser>
 
 + Players : DbSet<Player>
  + Inventories : DbSet<Inventory>
  + Characters : DbSet<Character>
  + Materials : DbSet<Material>
  + RecipeBooks : DbSet<RecipeBook>
  + Islands : DbSet<Island>
  + InventoryMaterials : DbSet<InventoryMaterial>
  + Roles : DbSet<AspNetRole>
  + UserRoles : DbSet<AspNetUserRole>
  + UserClaims : DbSet<AspNetUserClaim>
  + UserLogins : DbSet<AspNetUserLogin>
  + UserTokens : DbSet<AspNetUserToken>
}

' A context "has" a domain entitásokat (lágy függőségek)
ApplicationDbContext ..> ApplicationUser
ApplicationDbContext ..> Player
ApplicationDbContext ..> Inventory
ApplicationDbContext ..> InventoryMaterial
ApplicationDbContext ..> Character
ApplicationDbContext ..> Material
ApplicationDbContext ..> RecipeBook
ApplicationDbContext ..> Island
ApplicationDbContext ..> AspNetRole
ApplicationDbContext ..> AspNetUserRole
ApplicationDbContext ..> AspNetUserClaim
ApplicationDbContext ..> AspNetUserLogin
ApplicationDbContext ..> AspNetUserToken

@enduml